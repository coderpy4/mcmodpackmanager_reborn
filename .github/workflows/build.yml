name: Release
on:
  pull_request_target:
    types: [assigned, opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'beta'
      - name: Generate locales
        run: flutter gen-l10n
      - name: Build on windows
        if: matrix.platform == 'windows-latest'
        run: |
          flutter pub get
          flutter pub run msix:create --output-path windows-build --windows-build-args ' --split-debug-info --obfuscate --dart-define ETERNAL_API_KEY=${{ secrets.ETERNAL_API_KEY }} --release'
      - name: Compress Windows build to .zip
        if: matrix.platform == 'windows-latest'
        uses: vimtor/action-zip@v1.1
        with:
          files: ./build/windows/runner/Release
          recursive: true
          dest: WindowsBuild.zip

        - name: Publish Artifact
          if: matrix.platform == 'windows-latest'
            uses: actions/upload-artifact@v2
            with:
              path: ./WindowsBuild.zip
              name: WindowsBuild.zip

      - name: Build on macOS
        if: matrix.platform == 'macos-latest'
        run: |
          flutter pub get
          flutter build macos --release --split-debug-info --obfuscate --dart-define ETERNAL_API_KEY='${{ secrets.ETERNAL_API_KEY }}'
          tar -czvf macOSBuild.tar.gz build/macos/Build/Products/Release/Minecraft\ Modpack\ Manager\ Reborn.app
          # For future use
          # pkgbuild --install-location /Applications --component "./build/macos/Build/Products/Release/Minecraft Modpack Manager Reborn.app" ./mcmodpackmanagerMacOS.pkg --identifier dev.mrquantumoff.mcmodpackmanager
      - name: Publish Artifact
        if: matrix.platform == 'macos-latest'
          uses: actions/upload-artifact@v2
          with:
            path: ./MacOSBuild.zip
            name: MacOSBuild.zip
      - name: Build on Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install meson clang build-essential cmake curl file git unzip xz-utils zip libglu1-mesa ninja-build pkg-config libgtk-3-dev
          flutter pub get
          flutter build linux --release --split-debug-info --obfuscate --dart-define ETERNAL_API_KEY='${{ secrets.ETERNAL_API_KEY }}'
          tar -czvf GNULinuxBuild.tar.gz ./build/linux/x64/release/bundle
      - name: Publish Artifact
        if: matrix.platform == 'ubuntu-latest'
          uses: actions/upload-artifact@v2
          with:
            path: ./GNULinuxBuild.zip
            name: GNULinuxBuild.zip