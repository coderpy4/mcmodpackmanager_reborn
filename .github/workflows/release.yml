name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.1'
          channel: 'stable'
      - name: Build on windows
        if: matrix.platform == 'windows-latest'
        run: |
          flutter pub get
          flutter pub run msix:create --output-path windows-build
      - name: Upload the Microsoft Store MSIX package (Won't work if you install the app manually)
        if: matrix.platform == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ./windows-build/mcmodpackmanager_reborn.msix
      - name: Build on macOS
        if: matrix.platform == 'macos-latest'
        run: |
          flutter pub get
          flutter build macos
          tar -czvf macOSBuild.tar.gz build/macos/Build/Products/Release/Minecraft\ Modpack\ Manager\ Reborn.app
      - name: Upload the macOS build
        if: matrix.platform == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            macOSBuild.tar.gz
            LICENSE
      - name: Build on Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt install meson clang build-essential cmake
          flutter pub get
          flutter build linux
          tar -czvf GNULinuxBuild.tar.gz ./build/linux/x64/release/bundle
      - name: Upload the GNU/Linux build
        if: matrix.platform == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            GNULinuxBuild.tar.gz      