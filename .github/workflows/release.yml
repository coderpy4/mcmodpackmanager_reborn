name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.7.6'
          channel: 'stable'
      - name: Generate locales
        run: flutter gen-l10n
      - name: Build on windows
        if: matrix.platform == 'windows-latest'
        run: |
          flutter pub get
          flutter pub run msix:create --output-path windows-build --windows-build-args " --split-debug-info --obfuscate --dart-define ETERNAL_API_KEY=$ETERNAL_KEY"
        env:
          ETERNAL_KEY: ${{ secrets.ETERNAL_API_KEY }}
      - name: Compress Windows build to .zip
        if: matrix.platform == 'windows-latest'
        uses: vimtor/action-zip@v1.1
        with:
          files: ./build/windows/runner/Release
          recursive: true
          dest: WindowsBuild.zip

      - name: Upload the Windows MSIX package and .zip build
        if: matrix.platform == 'windows-latest'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            ./WindowsBuild.zip
            ./windows-build/mcmodpackmanager_reborn.msix
      - name: Build on macOS
        if: matrix.platform == 'macos-latest'
        run: |
          flutter pub get
          flutter build macos --split-debug-info --obfuscate --dart-define ETERNAL_API_KEY=$ETERNAL_KEY
          tar -czvf macOSBuild.tar.gz build/macos/Build/Products/Release/Minecraft\ Modpack\ Manager\ Reborn.app
          # For future use
          # pkgbuild --install-location /Applications --component "./build/macos/Build/Products/Release/Minecraft Modpack Manager Reborn.app" ./mcmodpackmanagerMacOS.pkg --identifier dev.mrquantumoff.mcmodpackmanager
        env:
          ETERNAL_KEY: ${{ secrets.ETERNAL_API_KEY }}
      - name: Upload the macOS build
        if: matrix.platform == 'macos-latest'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            macOSBuild.tar.gz
            LICENSE
      - name: Build on Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install meson clang build-essential cmake curl file git unzip xz-utils zip libglu1-mesa ninja-build pkg-config libgtk-3-dev
          flutter pub get
          flutter build linux --split-debug-info --obfuscate --dart-define ETERNAL_API_KEY=$ETERNAL_KEY
          tar -czvf GNULinuxBuild.tar.gz ./build/linux/x64/release/bundle
        env:
          ETERNAL_KEY: ${{ secrets.ETERNAL_API_KEY }}
      - name: Upload the GNU/Linux build
        if: matrix.platform == 'ubuntu-latest'
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            GNULinuxBuild.tar.gz